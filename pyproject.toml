[project]
name = "ai-agent-irpf"
version = "0.1.0"
description = "AI agent to help you in IRPF declaration"
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    # Core LangChain and AI models
    "langchain>=0.3.25",
    "langchain-google-vertexai>=2.0.24",
    "langchain-community>=0.3.24",
    "langchain-google-genai>=2.1.4",
    "anthropic[vertex]>=0.52.0",
    # Google AI and Cloud
    "google-cloud-aiplatform>=1.43.0",
    "google-genai>=1.16.1",
    "google-api-python-client>=2.170.0",
    "google-auth>=2.40.2",
    # Core utilities
    "pydantic>=2.11.5",
    "python-dotenv>=1.1.0",
    "httpx>=0.28.1",
    "aiofiles>=24.1.0",
    # PDF and OCR processing
    "pypdf2>=3.0.1",
    "pillow>=10.0.0",
    "pytesseract>=0.3.10",
    "pdf2image>=1.16.3",
    "pymupdf>=1.23.0",
    "opencv-python>=4.11.0",
    # Data processing
    "pandas>=2.0.0",
    "openpyxl>=3.1.0",
    # CLI and interface
    "click>=8.1.0",
    "rich>=13.0.0",
    "colorama>=0.4.6",
    # Utilities
    "requests>=2.31.0",
    "chardet>=5.2.0",
    "tabulate>=0.9.0",
    "pyreadline3>=3.5.4",
]

[dependency-groups]
dev = [
    "black>=25.1.0",
    "flake8>=7.2.0",
    "mypy>=1.15.0",
    "pre-commit>=4.2.0",
    "pytest>=8.3.5",
    "pytest-asyncio>=0.26.0",
    "pytest-cov>=6.1.0",
    "pytest-mock>=3.15.0",
]

[tool.pytest.ini_options]
minversion = "8.0"
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
    "--cov=agent",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "requires_api: marks tests that require API credentials",
    "requires_files: marks tests that require specific files",
]
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
]

[tool.coverage.run]
source = ["agent"]
omit = [
    "tests/*",
    "*/test_*.py",
    "*/__pycache__/*",
    "*/migrations/*",
    "venv/*",
    ".venv/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
